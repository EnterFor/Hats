{
  "config.hats.cat.hatRandomisation.name": "Hat Randomisation",
  "config.hats.cat.hatRandomisation.desc": "Options for the randomisation of hats.",
  "config.hats.cat.others.name": "Other Options",
  "config.hats.cat.others.desc": "Options that don't really fit anywhere else.",

  "config.hats.prop.maxHatRenders.name": "Max Hat Renders",
  "config.hats.prop.maxHatRenders.desc": "Maximum number of hats to render in one frame.",
  "config.hats.prop.hatChance.name": "Hat Spawn Chance",
  "config.hats.prop.hatChance.desc": "For Client Config: Spawn chance when on servers that do not have Hats installed.\nFor Server Config: Spawn chance for entities which support hats.",
  "config.hats.prop.hatUnlockString.name": "Hat Unlocked Message",
  "config.hats.prop.hatUnlockString.desc": "The Toast title when a hat/accessory is unlocked. 0 = Random, 1 = Hat Unlocked, 2 = New Hat, 3 = Hat Acquired, 4 = Hat Collected, 5 = Hat Get",
  "config.hats.prop.guiMinecraftStyle.name": "Render GUI in Minecraft Style",
  "config.hats.prop.guiMinecraftStyle.desc": "Do we render the GUI in Minecraft Style (as opposed to Boxes & Stuff style)? 1 = Vanilla Style, 2 = Texture Pack Style",
  "config.hats.prop.guiAnimationTime.name": "GUI Animation Time",
  "config.hats.prop.guiAnimationTime.desc": "The time (in ticks) for most of the GUI animations. Set to 1 if you want to practically skip animation.",
  "config.hats.prop.shownTutorial.name": "Shown GUI Tutorial",
  "config.hats.prop.shownTutorial.desc": "Have we shown the GUI tutorial? (Set to true to skip it)",
  "config.hats.prop.newHatToast.name": "New Hat Toast",
  "config.hats.prop.newHatToast.desc": "Enable the New Hat toast?",
  "config.hats.prop.forceRenderToasts.name": "Force Render Toasts",
  "config.hats.prop.forceRenderToasts.desc": "The Fancy Hat Selector GUI hides the game GUI. This disables toast rendering. Force the toast render after our UI renders?",
  "config.hats.prop.forceGuiFallback.name": "Force GUI Fallback",
  "config.hats.prop.forceGuiFallback.desc": "Don't like the camera spinning out when you choose a hat? Turn this on to force the in-screen entity render, always.",
  "config.hats.prop.invisibleEntityInHatSelector.name": "Invisible Player in Hat Selector",
  "config.hats.prop.invisibleEntityInHatSelector.desc": "Lagging? This might help give you back some frames.",
  "config.hats.prop.hatLauncherRandomHatSpeed.name": "Hat Launcher - Random Hat Cycle Speed",
  "config.hats.prop.hatLauncherRandomHatSpeed.desc": "On a \"Random Hat\" option for the Hat Launcher, a new hat shows every X ticks. Increase this to slow down the cycle.",
  "config.hats.prop.filterSorterConfig.name": "Hat Sorter Config",
  "config.hats.prop.filterSorterConfig.desc": "The config for the Hat Sorter. Please don't edit this by hand, do it through the Hats UI.",

  "config.hats.prop.attemptToFixOldHats.name": "Attempt To Fix Old Hats",
  "config.hats.prop.attemptToFixOldHats.desc": "(Not currently used, defaults to on currently) Should we attempt to fix hats made in the older versions of Tabula?",

  "config.hats.prop.randSeed.name": "Random Seed for Hat Randomisation",
  "config.hats.prop.randSeed.desc": "Random Seed used for Hat Randomisation, rarity, spawn chance, etc. Leave blank for random generated seed.",
  "config.hats.prop.entityOverrideChance.name": "Entity Chance Override",
  "config.hats.prop.entityOverrideChance.desc": "Entity chance override. Each entry should be a resource location and a chance, separated by a comma. EG: \"minecraft:pig,100\" will make all minecraft pigs have a 100 percent chance of having a hat.",
  "config.hats.prop.disabledMobs.name": "Disabled Mobs",
  "config.hats.prop.disabledMobs.desc": "Resource Location to disable hats on certain mobs. EG: minecraft:pig",
  "config.hats.prop.rarityWeight.name": "Rarity Weight",
  "config.hats.prop.rarityWeight.desc": "The weight of each of the spawn chance and rarity allocation of hats, in the order of Common, Uncommon, Rare, Epic, Legendary. Any lacking values are filled in with 0s, extra values discarded.",
  "config.hats.prop.rarityCost.name": "Value of Hat by Rarity",
  "config.hats.prop.rarityCost.desc": "The Value (in HATs) of a Hat by rarity.",
  "config.hats.prop.bossHatChanceBonus.name": "Boss Hat Spawn Chance Bonus",
  "config.hats.prop.bossHatChanceBonus.desc": "The bonus spawn chance of a boss to spawn a hat, in addition to the hatChance config.",
  "config.hats.prop.bossRarityBonus.name": "Boss Hat Rarity Bonus",
  "config.hats.prop.bossRarityBonus.desc": "The bonus to the rarity of hats spawned on bosses. EG: setting this to 1 (max) will force Bosses to only spawn with Legendary hats, should the weight be allocated correctly.",
  "config.hats.prop.allowFileTransfer.name": "Allow File Transfer",
  "config.hats.prop.allowFileTransfer.desc": "Allow sending of hat files between clients and servers?",
  "config.hats.prop.accessoryCostMultiplier.name": "Accessory Value Multiplier",
  "config.hats.prop.accessoryCostMultiplier.desc": "Accessories have their own rarity. This multiplies their value by their rarity set in rarityCost",
  "config.hats.prop.salesCostMultiplier.name": "Sales Cost Multiplier",
  "config.hats.prop.salesCostMultiplier.desc": "(Not currently used, for Hat Trader update) Hats sold by the Hat Trader (planned) cost this times more than their normal value.",
  "config.hats.prop.enabledGuiStyle.name": "Enabled Hat Selector GUI Style",
  "config.hats.prop.enabledGuiStyle.desc": "0 = Disable Hat Selector, 1 = Only allow the fallback (entity on screen) render of the Hat Selector, 2 = Allow full hat selector GUI",
  "config.hats.prop.sendNewHatToastPrompt.name": "Send New Hat Toast Prompt",
  "config.hats.prop.sendNewHatToastPrompt.desc": "Do we want to send clients a toast prompt for a new hat?",
  "config.hats.prop.enableCreativeModeHatHunting.name": "Enable Creative Mode Hat Hunting",
  "config.hats.prop.enableCreativeModeHatHunting.desc": "By default, Creative Mode players have access to all hats. Turning this on forces them to hunt for hats as if they were in Survival/Adventure",
  "config.hats.prop.hatEntityLifespan.name": "Hat Entity Lifespan",
  "config.hats.prop.hatEntityLifespan.desc": "The lifespan (in ticks) of the Hat Entity from the Hat Launcher. Be mindful this resets when a hat entity swaps out hats with another mob.",
  "config.hats.prop.hatLauncherReplacesPlayerHat.name": "Hat Launcher Can Replace Player Hat",
  "config.hats.prop.hatLauncherReplacesPlayerHat.desc": "Turning this off prevents the Hat Launcher from replacing a player's hat.",
  "config.hats.prop.hatLauncherDoesNotRemoveHatFromInventory.name": "Hat Launcher Does Not Remove Hat From Inventory",
  "config.hats.prop.hatLauncherDoesNotRemoveHatFromInventory.desc": "Disabling this knocks your hat off as if you were another mob, and also removes your worn hat from your inventory. Only applies when the player is using a Hat Inventory",

  "commands.hats.setHat.success": "Successfully rehatified %s entities.",
  "commands.hats.getHat.value": "Hat NBT Data (Click to Copy): ",
  "commands.hats.getHat.fail": "That entity does not have a hat.",

  "hats.key.hatsMenu": "Hats Menu",

  "hats.toast.unlock.template1": "%s Unlocked!",
  "hats.toast.unlock.template2": "New %s!",
  "hats.toast.unlock.template3": "%s Acquired!",
  "hats.toast.unlock.template4": "%s Collected!",
  "hats.toast.unlock.template5": "%s Get!",
  "hats.toast.unlock.hat": "Hat",
  "hats.toast.unlock.accessory": "Accessory",

  "hats.toast.sync.title": "Error Rendering Hat",
  "hats.toast.sync.subtitle": "Consider Syncing with Server in Hat Resource Management",

  "hats.toast.sync.receivedHat": "Received Hat From Server",

  "hats.gui.selection.title": "Hats Menu",

  "hats.gui.window.hatsList": "Hats List",
  "hats.gui.window.sidebar": "Sidebar",

  "hats.gui.window.hat.sidebar": "Hat Sidebar",
  "hats.gui.window.hat.colorizer": "Hat Colorizer",
  "hats.gui.window.hat.personaliser": "Hat Accessorizer",

  "hats.gui.window.hatsList.title": "Your Hats",
  "hats.gui.window.allHats.title": "All Hat Variants",
  "hats.gui.window.allHats.hatsOutOf": "%1$s of %2$s",

  "hats.gui.window.sorter.title": "Hat Filters And Sorters",
  "hats.gui.window.sorter.filters": "Filters",
  "hats.gui.window.sorter.sorters": "Sorters",
  "hats.gui.window.sorter.enabled": "Enabled",
  "hats.gui.window.sorter.enabledInverse": "Enabled - Inverse",
  "hats.gui.window.sorter.disabled": "Disabled",
  "hats.gui.window.sorter.dragTip": "You can drag the sorters around",

  "hats.gui.window.management.title": "Hat Management",
  "hats.gui.window.management.reloadAllHats": "Reload All Hats",
  "hats.gui.window.management.reloadedAllHats": "Reloaded All Hats.",
  "hats.gui.window.management.synchroniseWithServer": "Synchronise With Server",
  "hats.gui.window.management.sync.waiting": "Waiting for server to respond...",
  "hats.gui.window.management.sync.noDifferences": "All good! Hat names match on both sides",
  "hats.gui.window.management.sync.issue": "Sync issue!",
  "hats.gui.window.management.sync.clientMissing": "We are missing:",
  "hats.gui.window.management.sync.serverMissing": "Server is missing:",
  "hats.gui.window.management.sync.syncReq": "Do we want to sync?",

  "hats.gui.tutorial.title": "Tutorial",
  "hats.gui.tutorial.intro": "Do you want to start the GUI tutorial?",

  "hats.gui.button.removeHat": "Remove Hat",
  "hats.gui.button.randomHat": "Random Hat\n +SHIFT: Random Hue",
  "hats.gui.button.randomHatLauncher": "Random Hat",
  "hats.gui.button.sortingOptions": "Sorting Options",
  "hats.gui.button.hatResourceManagement": "Hat Resource Management",

  "hats.gui.button.colourise": "Colorize",
  "hats.gui.button.personalise": "Accessorize",
  "hats.gui.button.favouriteHat": "Favorite",

  "hats.gui.button.rgb": "RGB Modifiers",
  "hats.gui.button.hsb": "HSB Modifiers",
  "hats.gui.button.glint": "Glint",

  "hats.gui.button.reset": "Reset",

  "hats.gui.sorter.filterContributor.name": "Contributors",
  "hats.gui.sorter.filterHas.name": "None In Inventory",
  "hats.gui.sorter.filterHasAccessories.name": "No Accessories",
  "hats.gui.sorter.filterUndiscovered.name": "Not Unlocked",
  "hats.gui.sorter.sorterAlphabetical.name": "Alphabetically",
  "hats.gui.sorter.sorterCount.name": "By Count",
  "hats.gui.sorter.sorterDiscovered.name": "By Unlocked",
  "hats.gui.sorter.sorterRarity.name": "By Rarity",

  "hats.gui.tooltip.author": "Made by: %s",
  "hats.gui.tooltip.rarity": "Rarity: %s",
  "hats.gui.tooltip.notUnlocked": "Not Unlocked",
  "hats.gui.tooltip.worth": "Worth %s Humorously Acronymed Token(s)",

  "hats.plugin.tabula.button": "Open Hat",
  "hats.plugin.tabula.button.new": "New",
  "hats.plugin.tabula.button.ok.tooltip": "Hold SHIFT to Open The Selected Hat As A Ghost Instead",

  "item.hats.hat_launcher": "Hat Launcher",

  "subtitles.hats.hat_launcher.firing": "Hat launcher firing",
  "subtitles.hats.hat_launcher.hit": "Hat forced onto an entity's head",
  "subtitles.hats.hat.bonk": "Hat bonking off of a block"
}